[tox]
requires =
    tox>=4.2

[testenv]
description = run unit tests
commands_pre =
    poetry env use {envpython}
    poetry install
commands =
    poetry run pytest
commands_post =
    poetry env use system
allowlist_externals =
    poetry

[testenv:style]
description = run style
set_env =
    MYPYPATH = .
commands_pre =
    poetry env use {envpython}
    poetry install
commands =
    poetry run slotscheck pandoc_latex_environment.py
    poetry run refurb pandoc_latex_environment.py
    poetry run teyit --show-stats --fail-on-change tests/
    poetry run ruff check pandoc_latex_environment.py
    poetry run black --check --diff pandoc_latex_environment.py tests
    poetry run doc8 -q docs
    poetry run mypy --package pandoc_latex_environment
    poetry run flake8 pandoc_latex_environment.py
commands_post =
    poetry env use system

[testenv:linter]
description = run pylint
commands_pre =
    poetry env use {envpython}
    poetry install
commands =
    poetry run pylint pandoc_latex_environment.py
commands_post =
    poetry env use system

[testenv:coverage]
description = run coverage
commands_pre =
    poetry env use {envpython}
    poetry install
commands =
    poetry run pytest --cov=pandoc_latex_environment --junitxml=junit.xml --cov-report=html:build/coverage
commands_post =
    poetry env use system
